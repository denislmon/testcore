/*! \file config.h \brief project configuration definition. */
// ****************************************************************************
//
//                      MSI ScaleCore
//
//                  Copyright (c) 2009 by
//            Measurement Systems International
//                   Seattle, Washington
//                   All Rights Reserved
//
// Filename: config.h
// Hardware: ATMEL AVR series
// OS:       independent
// Compiler: avr-gcc
// Software layer:  project wide
//
//  History:  Created on 2007/06/27 by Wai Fai Chin
//  History:  Modified on 2011/12/16 by Denis Monteiro
/// \code #include "config.h" \endcode
/// \par Overview
///     Definitons of software and hardware configuration setings.
///     This file will configure how the software runs on different
///     targets, crystal frequency, software or hardware emulation.
//
// ****************************************************************************
//@{

#ifndef MSI_CONFIG_H
#define MSI_CONFIG_H

#include "typeDef.h"
#include "productdef.h"
#include "productcnfg.h"


// PCB configuration
#define CONFIG_PCB_AS_SCALECORE1		0
#define CONFIG_PCB_AS_SCALECORE2		1
#define CONFIG_PCB_AS_SCALECORE3		2			// 2013-04-16 -WFC-

#define CONFIG_PCB_AS	CONFIG_PCB_AS_SCALECORE3

//#define CONFIG_PRODUCT_AS	CONFIG_AS_CHALLENGER3


// software tools configuration

// define doxygen for auto document the software project. It must comment out when building the project by the C compiler tools.
// #define CONFIG_USE_DOXYGEN 1

#define CONFIG_USE_AVR_GCC	1
#define CONFIG_USE_PC_GCC	2

// CONFIG_USE_PC_GCC is for running on a PC in Linux or MS Window for test hardware independent modules.
#define CONFIG_COMPILER		CONFIG_USE_AVR_GCC
//#define CONFIG_COMPILER		CONFIG_USE_PC_GCC


#if ( CONFIG_COMPILER == CONFIG_USE_AVR_GCC )
#include <avr/io.h>
#include <avr/interrupt.h>
#include <avr/pgmspace.h>

#else
	#define PROGMEM
#endif

#define 	MAX_SOFTWARE_VERSION_LENGTH		5

// 2011-09-01 -WFC- #define	APPBOOT_POST_BOOT_STATUS_NEED_MASTER_RESET_APP	0X01		// 2011-08-18 -WFC-
#define	APPBOOT_POST_BOOT_STATUS_NEED_MASTER_RESET_APP	0X55		// 2011-09-01 -WFC- used 0x55 instead of 1 because 1 could easily generated by noise.
#define	APPBOOT_STATUS_NEED_MASTER_RESET_APP	0X01
#define	APPBOOT_STATUS_NEED_UPDATE_APP			0X02

typedef struct APP_BOOT_SHARE_TAG {
    UINT32					softwareCRC32;			// software CRC signature.
    UINT32					codeSize;				// software code size is in byte of binary data, not the hex char. Hex char length is 2x of program size.
    UINT32					entryAddr;				// entry address of application codes.
													/// product ID
	BYTE					productID;
													/// product version ID
	BYTE					productVersionID;
    BYTE					softVersionStr[MAX_SOFTWARE_VERSION_LENGTH + 1];		// software version supplied by .prg file.
    BYTE					unused[8];				// 
    // 2011-08-18 -WFC- BYTE					app_baud_rate;			// application baud rate,
													/// action to be perform after bootloaded an app code. cmd {09} use this variable. 2011-08-18 -WFC-
    BYTE					post_boot_status;		// posted boot loaded status. 85 == app needs master reset. It replalce app_baud_rate since we don't it. The bootloader still named it app_baud_rate because no update to bootloader source code. 2011-08-18 -WFC-
	BYTE					app_boot_status;		// status of application and boot codes. bit0 == master reset, bit1 == app code need bootloader update a new app code.
}APP_BOOT_SHARE_T; 

#if ( CONFIG_PRODUCT_AS	== CONFIG_AS_CHALLENGER3 || CONFIG_PRODUCT_AS == CONFIG_AS_PORTAWEIGH2 ) // 2011-12-15 -DLM-
#define		CONFIG_INCLUDED_LIGHT_SENSOR_MODULE	TRUE	// 2011-05-18 -WFC-
#define		CONFIG_INCLUDED_PRINT_STRING_MODULE	TRUE	// 2011-06-23 -WFC-
#else
#define		CONFIG_INCLUDED_LIGHT_SENSOR_MODULE	FALSE	// 2011-06-10 -WFC-
#endif

#if ( CONFIG_PRODUCT_AS	== CONFIG_AS_DYNA_LINK_II || CONFIG_PRODUCT_AS == CONFIG_AS_REMOTE_METER || CONFIG_PRODUCT_AS == CONFIG_AS_IDSC )
#define		CONFIG_INCLUDED_PRINT_STRING_MODULE	TRUE	// 2011-06-23 -WFC-
// #else
// #define		CONFIG_INCLUDED_PRINT_STRING_MODULE	FALSE	// 2011-06-23 -WFC-
// #define		CONFIG_INCLUDED_PRINT_STRING_MODULE	FALSE	// 2011-06-23 -WFC-
#endif

// MODULES FOR TESTING:
// Note that you should only test one module at a time. It is ok to test multiple modules
// at a time provide that each module does shares the same resource.
#define     CONFIG_TEST_MODULE_NEED			FALSE
#define     CONFIG_TEST_PARSER_MODULE		FALSE
#define     CONFIG_TEST_SERIAL0_MODULE		FALSE
#define     CONFIG_TEST_SERIAL1_MODULE		FALSE
#define     CONFIG_TEST_TIMER_MODULE		FALSE

#define		CONFIG_TEST_STREAM_ROUTER_MODULE	FALSE
#define		CONFIG_TEST_LED_DISPLAY_MODULE		FALSE

//#define     CONFIG_DEVELOPING_XBEE		TRUE			// 2011-11-30 -WFC-

/* Moved to productcnfg.h and productdef.h 2013-10-15 -DLM-
#define     CONFIG_RF_MODULE_AS_NONE		0				// 2012-03-28 -WFC-
#define     CONFIG_RF_MODULE_AS_XBEE		1					// 2012-03-28 -WFC-
#define     CONFIG_RF_MODULE_AS		CONFIG_RF_MODULE_AS_XBEE	// 2012-03-28 -WFC-
// #define     CONFIG_RF_MODULE_AS		CONFIG_RF_MODULE_AS_NONE	// 2012-05-14 -WFC-

#define     CONFIG_ETHERNET_MODULE_AS_NONE	0				// 2012-07-05 -DLM-
#define     CONFIG_ETHERNET_MODULE_AS_DIGI	1				// 2012-07-05 -DLM-
// #define     CONFIG_ETHERNET_MODULE_AS		CONFIG_ETHERNET_MODULE_AS_DIGI	// 2012-07-05 -DLM-
#define     CONFIG_ETHERNET_MODULE_AS		CONFIG_ETHERNET_MODULE_AS_NONE	// 2012-07-05 -DLM-

#if CONFIG_PRODUCT_AS == CONFIG_AS_PORTAWEIGH2  // 2012-07-31 -DLM-
#define		CONFIG_NUMBER_DIGITS	5
//#define		CONFIG_NUMBER_DIGITS	6
#endif
*/

#define     CONFIG_RF_MODULE_AS_NONE		0				// 2012-03-28 -WFC-
#define     CONFIG_RF_MODULE_AS_XBEE		1					// 2012-03-28 -WFC-

#define     CONFIG_ETHERNET_MODULE_AS_NONE	0				// 2012-07-05 -DLM-
#define     CONFIG_ETHERNET_MODULE_AS_DIGI	1				// 2012-07-05 -DLM-

#if ( CONFIG_SUBPRODUCT_AS == CONFIG_AS_PORTAWEIGH2_BB ) // PortaWeigh2 Version 01bXX
	#define CONFIG_RF_MODULE_AS			CONFIG_RF_MODULE_AS_XBEE
	#define CONFIG_ETHERNET_MODULE_AS	CONFIG_ETHERNET_MODULE_AS_NONE
	#define	CONFIG_NUMBER_DIGITS		5
	#define LED_FILTER_WINDOW_REV_C 	FALSE
	#define CONFIG_4260IS        		FALSE
#elif ( CONFIG_SUBPRODUCT_AS == CONFIG_AS_PORTAWEIGH2_BC ) // PortaWeigh2 Version 02bXX
	#define CONFIG_RF_MODULE_AS			CONFIG_RF_MODULE_AS_XBEE
	#define CONFIG_ETHERNET_MODULE_AS	CONFIG_ETHERNET_MODULE_AS_NONE
	#define	CONFIG_NUMBER_DIGITS		5
	#define LED_FILTER_WINDOW_REV_C 	TRUE
	#define CONFIG_4260IS        		FALSE
#elif ( CONFIG_SUBPRODUCT_AS == CONFIG_AS_PORTAWEIGH2_NB ) // PortaWeigh2 Version 01nXX
	#define CONFIG_RF_MODULE_AS			CONFIG_RF_MODULE_AS_NONE
	#define CONFIG_ETHERNET_MODULE_AS	CONFIG_ETHERNET_MODULE_AS_DIGI
	#define	CONFIG_NUMBER_DIGITS		5
	#define LED_FILTER_WINDOW_REV_C 	FALSE
	#define CONFIG_4260IS        		FALSE
#elif ( CONFIG_SUBPRODUCT_AS == CONFIG_AS_PORTAWEIGH2_NC ) // PortaWeigh2 Version 01nXX
	#define CONFIG_RF_MODULE_AS			CONFIG_RF_MODULE_AS_NONE
	#define CONFIG_ETHERNET_MODULE_AS	CONFIG_ETHERNET_MODULE_AS_DIGI
	#define	CONFIG_NUMBER_DIGITS		5
	#define LED_FILTER_WINDOW_REV_C 	TRUE
	#define CONFIG_4260IS        		FALSE
#elif ( CONFIG_SUBPRODUCT_AS == CONFIG_AS_PORTAWEIGH2_RB )  // PortaWeigh2 Version 01-XX
	#define CONFIG_RF_MODULE_AS			CONFIG_RF_MODULE_AS_NONE
	#define CONFIG_ETHERNET_MODULE_AS	CONFIG_ETHERNET_MODULE_AS_NONE
	#define	CONFIG_NUMBER_DIGITS		5
	#define LED_FILTER_WINDOW_REV_C 	FALSE
	#define CONFIG_4260IS        		FALSE
#elif ( CONFIG_SUBPRODUCT_AS == CONFIG_AS_PORTAWEIGH2_RC ) // PortaWeigh2 Version 01-XX
	#define CONFIG_RF_MODULE_AS			CONFIG_RF_MODULE_AS_NONE
	#define CONFIG_ETHERNET_MODULE_AS	CONFIG_ETHERNET_MODULE_AS_NONE
	#define	CONFIG_NUMBER_DIGITS		5
	#define LED_FILTER_WINDOW_REV_C 	TRUE
	#define CONFIG_4260IS        		FALSE
#elif ( CONFIG_SUBPRODUCT_AS == CONFIG_AS_PORTAWEIGH2_PC ) // PortaWeigh2 Version 02bXX
	#define CONFIG_RF_MODULE_AS			CONFIG_RF_MODULE_AS_XBEE
	#define CONFIG_ETHERNET_MODULE_AS	CONFIG_ETHERNET_MODULE_AS_NONE
	#define	CONFIG_NUMBER_DIGITS		5
	#define LED_FILTER_WINDOW_REV_C 	TRUE
	#define CONFIG_4260IS        		FALSE
#elif ( CONFIG_SUBPRODUCT_AS == CONFIG_AS_PORTAWEIGH2_IS ) // PortaWeigh2 Version 02bXX
	#define CONFIG_RF_MODULE_AS			CONFIG_RF_MODULE_AS_XBEE
	#define CONFIG_ETHERNET_MODULE_AS	CONFIG_ETHERNET_MODULE_AS_NONE
	#define	CONFIG_NUMBER_DIGITS		5
	#define LED_FILTER_WINDOW_REV_C 	TRUE
	#define CONFIG_4260IS        		TRUE
#endif

#define CONFIG_HIGH_SPEED_RF_MSG	TRUE

// CPU CLOCK FREQUENCY
#define XTAL_7P3MHZ			7372800
#define XTAL_11P0592MHZ		11059200

#define CONFIG_XTAL_FREQUENCY   XTAL_11P0592MHZ

//	#define REAL_TIME_CLOCK_FREQUENCY	32768	not installed	// PHJ

#define CONFIG_USE_SERIAL1         FALSE

#define CONFIG_USE_ATMEGA1281       1
#define CONFIG_USE_ATXMEGA128A1     2
#define CONFIG_USE_ATXMEGA192D3		3				// 2013-04-16 -WFC-

#define CONFIG_USE_CPU     CONFIG_USE_ATXMEGA192D3

#define CONFIG_EMULATE_FLASHDATA	FALSE
#define CONFIG_EMULATE_ADC			FALSE
#define	CONFIG_DEBUG_ADC			FALSE
#define	CONFIG_ADC_SCHEDULE_MODE	FALSE
#define	CONFIG_ADC_POLL_MODE		TRUE
#define CONFIG_EMULATE_TEMP			TRUE
		
// #define CONFIG_WITHOUT_JTAG
#define CONFIG_WITHOUT_JTAG			TRUE

// 2010-11-08 -WFC-
// -WFC- 2011-03-16 #define CONFIG_USE_INTERNAL_EEPROM	TRUE
#define CONFIG_USE_INTERNAL_EEPROM	FALSE

//	#define CONFIG_RCAL_TIMES_FOUR		FALSE
#define CONFIG_RCAL_THIRD_DOUNTBY	TRUE
//	#define CONFIG_WITH_HIRES			TRUE		
//	#define CONFIG_TWO_COUNTYBY_HIRES	TRUE
//	#define CONFIG_WITH_AUTO_HIRES		TRUE



#if ( CONFIG_USE_CPU == CONFIG_USE_ATMEGA1281 )

	#define SOFTWARE_DELAY_LOOPS	1105
	#define UART_FRAMING_ERROR	(1<<FE0)
	#define UART_DATA_OVERRUN		(1<<DOR0)
	#define UART_PARITY_ERROR		(1<<UPE0)

	// Offset address of PROGMEM data type such as defined strings or lookup table.
	#define BOOTLOADER_START_ADDR	0X1E000
	// #define BLS_PROGMEM_OFFSET	0X10000
	#define BLS_PROGMEM_OFFSET	0
	#define CONFIG_XTAL_FREQUENCY   XTAL_11P0592MHZ

#elif (  CONFIG_USE_CPU == CONFIG_USE_ATXMEGA128A1 )
	#define SLAVE_DISPLAY								// 2011-12-06 -WFC-

	#define SOFTWARE_DELAY_LOOPS	1105
	#define UART_FRAMING_ERROR	(1<<FE0)
	#define UART_DATA_OVERRUN		(1<<DOR0)
	#define UART_PARITY_ERROR		(1<<UPE0)

	// Offset address of PROGMEM data type such as defined strings or lookup table.
	#define BOOTLOADER_START_ADDR	0X10000
	// #define BLS_PROGMEM_OFFSET	0X10000
	#define BLS_PROGMEM_OFFSET	0
	// #define CONFIG_XTAL_FREQUENCY   XTAL_14P746MHZ
	#define CONFIG_XTAL_FREQUENCY   INTERNAL_32MHZ

#elif (  CONFIG_USE_CPU == CONFIG_USE_ATXMEGA192D3 )
	#define SLAVE_DISPLAY

	#define SOFTWARE_DELAY_LOOPS	3200
	#define UART_FRAMING_ERROR	(1<<FE0)
	#define UART_DATA_OVERRUN		(1<<DOR0)
	#define UART_PARITY_ERROR		(1<<UPE0)

	// Offset address of PROGMEM data type such as defined strings or lookup table.
	#define BOOTLOADER_START_ADDR	0X10000
	// #define BLS_PROGMEM_OFFSET	0X10000
	#define BLS_PROGMEM_OFFSET	0
	// #define CONFIG_XTAL_FREQUENCY   XTAL_14P746MHZ
	#define CONFIG_XTAL_FREQUENCY   INTERNAL_32MHZ

#endif



#if ( CONFIG_PRODUCT_AS	== CONFIG_AS_CHALLENGER3 || CONFIG_PRODUCT_AS == CONFIG_AS_PORTAWEIGH2 ) // 2011-12-15 -DLM-
#define	MAX_NUM_RCAL_LOADCELL		1
#else
#define	MAX_NUM_RCAL_LOADCELL		2
#endif


#endif
//@}

